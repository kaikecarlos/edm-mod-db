name: Update Releases

concurrency: update-releases

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "mods.json"
  pull_request:
    branches:
      - "master"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN || secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache pnpm modules
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-

      - uses: pnpm/action-setup@v4
        with:
          version: 8.6.10
          run_install: true

      - name: Build
        run: |
          cd scripts
          pnpm run build

      - name: Checkout database repo
        uses: actions/checkout@v4
        with:
          ref: source
          path: database

      - name: Make database copy
        run: cp database/database.json previous-database.json

      - name: Fetch mod releases and manifests
        uses: ./actions/update-database
        with:
          out-directory: database
          GITHUB_TOKEN: ${{ env.GH_TOKEN }}
          mods: mods.json
          previous-database: previous-database.json
          google-service-account: ${{ github.event_name != 'pull_request' && secrets.GOOGLE_SERVICE_ACCOUNT || '' }}

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: database

      - name: Deploy to GitHub Pages
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/deploy-pages@v4
        with:
          token: ${{ env.GH_TOKEN }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ github.event_name != 'pull_request' }}
        with:
          branch: source
          repository: database
          commit_message: Update mod database
          commit_user_name: EDM Mod Database
          commit_user_email: database@edmmods.com
          commit_author: EDM Mod Database <database@edmmods.com>

      # - name: Dispatch Website Build Event
      #   if: ${{ github.event_name != 'pull_request' }}
      #   run: |
      #     curl -XPOST -u "${{ secrets.GH_USER }}:${{ env.GH_TOKEN }}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/ow-mods/outerwildsmods.com/dispatches --data '{"event_type": "build"}'